from flask import Flask, redirect, url_for, render_template, request, session, flash
from datetime import timedelta 
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)
app.secret_key = "seckey"
app.permanent_session_lifetime = timedelta(minutes=5)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///users.sqlite3'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False 
database = SQLAlchemy(app) 

class Users(database.Model):
    _id = database.Column("id", database.Integer, primary_key=True)
    name = database.Column("name", database.String(100))
    email = database.Column(database.String(100))

    def __init__(self, name, email):
        self.name = name 
        self.email = email 
    
@app.route("/viewpeople")
def view():
    return render_template("view.html.txt", values = Users.query.all())


@app.route("/")
def homepage():
    return "This is the home page"

@app.route("/admin")
def admin():
    return redirect(url_for("homepage"))


@app.route("/nav")
def greet():
    return render_template("final.html.txt") 


@app.route("/login", methods=["POST", "GET"])
def login():
    if request.method == "POST":
        session.permanent = True 
        user = request.form["nm"] 
        session["user"] = user
        with app.app_context():
            found_user = Users.query.filter_by(name=user).first()
            if found_user:
                session["email"] = found_user.email 
            else:
                usr = Users(user, None)
                database.session.add(usr)
                database.session.commit()
                

        return redirect(url_for("user"))
    else: 
        if "user" in session:
            flash("Already logged in", "info")
            return redirect(url_for("user"))
        else:
            return render_template("login.html.txt")


@app.route("/user", methods=["POST", "GET"])
def user():
    email = None
    if "user" in session:
        user = session["user"]
        if request.method == "POST":
            email = request.form["email"]
            session["email"] = email
            with app.app_context():
                found_user = Users.query.filter_by(name=user).first()
                found_user.email = email
                database.session.commit()
                flash("Email successfully submitted!", "info")
        else:
            if "email" in session:
                email = session["email"]
            else:
                return render_template("user.html.txt")
        return render_template("user.html.txt", email=email)
    else: 
        flash("You are not logged in!", "info") 
        return redirect(url_for("login")) 



@app.route("/logout")
def logout():
    if "user" in session:
        user = session["user"]
        flash(f"You have been logged out successfully, {user}!", "info")
    session.pop("user", None)
    session.pop("email", None)
    return redirect(url_for("login"))

if __name__ == "__main__":
    with app.app_context():
        database.create_all()
    app.run(debug=True)

